CREANDO UNA BASE DE DATOS EN SQLITE3 EN PYTHON EN FUNCIONES 
def createDB():
    conn= sql.connect("dbUNO.db")
    conn.commit()
    conn.close()

=====================================================================================================================
CREANDO UNA TABLA PARA LLENADO DE BANCO DE DATOS EN UNA DATA BASE 
def createTable():
    conn= sql.connect("dbUNO.db")
    cursor = conn.cursor()
    cursor.execute(
            """CREATE TABLE pendientes (
                name text,
                followers interger,
                subs integer
            )"""
    )
    conn.commit()
    conn.close()

=====================================================================================================================
AGREGANDO UNA LINEA y/o FILA A UNA TABLA DE UNA BASE DE DATOS 
def insertRow(name, followers, subs):
    conn= sql.connect("dbUNO.db")
    cursor = conn.cursor()
    instruction = f"INSERT INTO pendientes VALUES ('{name}', {followers}, {subs})"
    cursor.execute(instruction)
    conn.commit()
    conn.close()
    
=====================================================================================================================
AGREGANDO 2 LINEAS y/o FILAS MAS A UNA TABLA DE UNA BASE DE DATOS
def insertRows(pendientesList):
    conn= sql.connect("dbUNO.db")
    cursor = conn.cursor()
    instruction = f"INSERT INTO pendientes VALUES (?, ?, ?)"
    cursor.executemany(instruction, pendientesList)
    conn.commit()
    conn.close()
 
 
 EN EL MAIN PRINCIPAL MANDAMOS LLAMAR A LA  FUNCION INSERTROWS 
 
     actualizaciones = [
        ("Jazmin", 27, 0),
        ("Aracely", 50, 35),
        ("Samuel", 31, 10)
    ]

    insertRows(actualizaciones)
    
=====================================================================================================================

LEER UNA LINEA y/o FILA A UNA TABLA DE UNA BASE DE DATOS 

def readRow():
    conn= sql.connect("dbUNO.db")
    cursor = conn.cursor()
    instruction = f"SELECT * FROM pendientes"
    cursor.execute(instruction)
    datos=cursor.fetchall()
    conn.commit()
    conn.close()
    print(datos)
    
==============================================================================================================
  
PARA FILTRAR LINEAS O FILAS DE UNA BASE DE DATOS DEPENDIENDO LA COLUMNA O EL FIELD 
def search():
    conn= sql.connect("dbUNO.db")
    cursor = conn.cursor()
    #EXACTAMENTE COMO SE ESCRIBE 
    
    #instruction = f"SELECT * FROM pendientes WHERE name='robert'"
    
    #BUSCA ALGO SIMILAR EN LA FORMA DE ESCRIBIR
   
    #instruction = f"SELECT * FROM pendientes WHERE name like 'j%'"
   
    instruction = f"SELECT * FROM pendientes WHERE subs < 10"
    cursor.execute(instruction)
    datos=cursor.fetchall()
    conn.commit()
    conn.close()
    print(datos)
 
===============================================================================================================
MODIFICAR ITEMS EN TABLAS DE UNA BASE DE DATOS

def updateField():
    conn= sql.connect("dbUNO.db")
    cursor = conn.cursor()
    instruction = f"UPDATE pendientes SET subs=12 WHERE name like 'Gerardo'"
    cursor.execute(instruction)
    conn.commit()
    conn.close()

====================================================================================================================
ELIMINAR ITEMS DE UNA TABLA EN UNA BASE DE DATOS

def deleteRow():
    conn= sql.connect("dbUNO.db")
    cursor = conn.cursor()
    instruction = f"DELETE FROM pendientes WHERE name='Toledo'"
    cursor.execute(instruction)
    conn.commit()
    conn.close()
  

